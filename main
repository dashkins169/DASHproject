import psycopg2
import click
global mydict
# from logging import logger (будет в будущем)


def boy_exists(paren): #проверка на существовани е парня в базе
    with connection.cursor() as cursor:
        cursor.execute("""SELECT us_name FROM parni""")
        df = cursor.fetchall()
        for i in df:
            if i[0] == paren:
                return True
        return False


def my_boy(paren, age, ball, postupok):  #по name определяем есть ли такой парень в базе, далее либо запусаем полное добавление, либо обновление баллов
    r = boy_exists(paren)
    if r == True:
        #print("ваш парень есть в базе и мы добавили ему", ball, "баллов")
        add_ball(paren, ball, postupok)
    else:
        #print("вы его единственная, ваш парень добавлен в базу")
        new_boy(paren, age, ball, postupok)


def new_boy(paren, age, ball, postupok): # полное добавление парня
    with connection.cursor() as cursor:
        cursor.execute(f"""
                INSERT INTO parni(us_name, age, score, move) VALUES
                    ('{paren}', {age}, {ball},  ARRAY['{postupok}']);
                """)
        connection.commit()


def add_ball(paren, ball, postupok):  # если парень существует, то обновим его баллы
        with connection.cursor() as cursor:
            cursor.execute(f"""UPDATE parni SET score = score + {ball}, move = array_append(move, '{postupok}') WHERE us_name = '{paren}';""")
        connection.commit()


def filter_po_age(k):
    with connection.cursor() as cursor:
        cursor.execute(f"""SELECT * FROM parni WHERE age = {k}; """)
        print(cursor.fetchall())


def filter_po_score(k):
    with connection.cursor() as cursor:
        cursor.execute(f"""SELECT * FROM parni WHERE score >= {k}; """)
        print(cursor.fetchall())


@click.command()
@click.argument("name", nargs=2, type=str)
@click.option("--age", "-a", default=18, help="возраст парня")
@click.option("--ball", "-b", default=0, help="баллы парня")

@click.argument("move", nargs=-1, type=str)
def main(name, age, ball, move):  # функция вызывающая другие
    paren = name[0] + " " + name[1]
    postupok = ""
    for i in move:
        postupok += i
        postupok += " "
    if paren == "filter parney":
        if move[0] == "age":
            filter_po_age(move[1])
        if move[0] == "ball":
            filter_po_score(move[1])
    else:
        my_boy(paren, age, ball, postupok)

if __name__ == '__main__':
    with psycopg2.connect(dbname="postgres",
            user="postgres",
            host="127.0.0.1",
            password="dash") as connection:
        main()
